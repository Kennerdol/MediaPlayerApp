<Window x:Class="MediaPlayerApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Duducha" Height="500" Width="1100"
        Icon="/Icons/logo.png"
        WindowStartupLocation="CenterScreen" 
        Background="{DynamicResource WindowBackground}" Foreground="{DynamicResource WindowForeground}">


    <Grid>
        <!-- Define rows -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Menu bar -->
            <RowDefinition />
            <!-- Main content -->
            <RowDefinition Height="Auto"/>
            <!-- Media controls -->
            <RowDefinition Height="Auto"/>
            <!-- Status bar -->
        </Grid.RowDefinitions>

        <!-- ===== Menu bar ===== -->
        <Menu Grid.Row="0" x:Name="TopMenu" Background="{DynamicResource WindowBackground}">
            <MenuItem Header="_File">
                <MenuItem Header="Open..."/>
                <MenuItem Header="Exit"/>
            </MenuItem>
            <MenuItem Header="_Playback">
                <MenuItem Header="Play"/>
                <MenuItem Header="Pause"/>
                <MenuItem Header="Next"/>
                <MenuItem Header="Previous"/>
                <MenuItem Header="Stop"/>
                <MenuItem Header="Clear Playlist" Click="ClearPlaylist_Click"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="How To"/>
                <MenuItem Header="About"/>
                <MenuItem Header="Contact"/>
            </MenuItem>
            
            <MenuItem Header="_Settings">
                <MenuItem Header="Preferences"/>
            </MenuItem>
        </Menu>

        <!-- ===== Main Content (Media + Playlist) ===== -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="MediaColumn" Width="*"/>
                <!-- Media -->
                <ColumnDefinition x:Name="SplitterColumn" Width="3"/>
                <!-- Splitter -->
                <!--<ColumnDefinition x:Name="PlaylistColumn" Width="Auto"/>-->
                <ColumnDefinition x:Name="PlaylistColumn" Width="Auto"/>
                <!-- Playlist -->
            </Grid.ColumnDefinitions>

            <!-- ==== MediaElement ==== -->
            <!-- 🎬 Left Side (Media + Info + Visualizer) -->
            <Grid Grid.Column="0" Margin="5" Background="{DynamicResource WindowBackground}">
                <!-- Base MediaElement -->
                <MediaElement x:Name="media_Element"
                  LoadedBehavior="Manual"
                  UnloadedBehavior="Manual"
                  Stretch="Uniform" MediaFailed="media_Element_MediaFailed" MouseLeftButtonDown="MediaElement_MouseLeftButtonDown"/>

                <!-- 📀 Watermark-style Thumbnail + Song Info -->
                <Viewbox Stretch="Uniform" x:Name="SongInfoPanel">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center"
                    VerticalAlignment="Center" Margin="20" Opacity="0.75">
                        <!-- watermark effect -->

                        <!-- Album Cover -->
                        <Border CornerRadius="8" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" Width="300" Height="300" Background="{DynamicResource NoBackground}">
                            <Image x:Name="AlbumThumbnail" Source="/Icons/musical-note.png" Opacity="0.9" Stretch="UniformToFill"/>
                        </Border>

                        <!-- Song Info -->
                        <StackPanel Margin="0,8,0,0">
                            <TextBlock x:Name="CurrentTitle" Text="{Binding Title}" FontSize="16"  Foreground="{DynamicResource WindowForeground}" FontWeight="Bold" TextWrapping="Wrap" TextAlignment="Center"/>
                            <TextBlock x:Name="SongArtist" Text="{Binding Artist}" FontSize="13" Foreground="{DynamicResource WindowForeground}" TextAlignment="Center"/>
                            <TextBlock x:Name="totalTime" Text="{Binding Duration}" FontSize="12"  Foreground="{DynamicResource WindowForeground}" TextAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>
                </Viewbox>
                <!-- 🎶 Equalizer Overlay -->
                <StackPanel x:Name="VisualizerPanel"  Orientation="Horizontal"  HorizontalAlignment="Center"
                VerticalAlignment="Center" Margin="0,0,0,50" Visibility="Hidden">
                    <Rectangle x:Name="Bar1" Fill="{DynamicResource AccentColor}" Width="10" Height="5" Margin="2,0"/>
                    <Rectangle x:Name="Bar2" Fill="{DynamicResource AccentColor}" Width="10" Height="10" Margin="2,0"/>
                    <Rectangle x:Name="Bar3" Fill="{DynamicResource AccentColor}" Width="10" Height="15" Margin="2,0"/>
                    <Rectangle x:Name="Bar4" Fill="{DynamicResource AccentColor}" Width="10" Height="20" Margin="2,0"/>
                    <Rectangle x:Name="Bar5" Fill="{DynamicResource AccentColor}" Width="10" Height="10" Margin="2,0"/>
                    <Rectangle x:Name="Bar6" Fill="{DynamicResource AccentColor}" Width="10" Height="5" Margin="2,0"/>
                    <Rectangle x:Name="Bar7" Fill="{DynamicResource AccentColor}" Width="10" Height="15" Margin="2,0"/>
                </StackPanel>
            </Grid>



            <!-- ==== Splitter ==== -->
            <GridSplitter Grid.Column="1" x:Name="GridPlit" Width="3" HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch" Background="{DynamicResource Splittercolor}"/>

            <!-- ==== Playlist ==== -->
            <Grid Grid.Column="2" x:Name="PlaylistGrid" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="80"/>
                    <!-- ==== Search and Load File ==== -->
                    <RowDefinition />
                    <!-- ==== Playlist ==== -->
                </Grid.RowDefinitions>

                <!-- ==== Search & buttons ==== -->
                <StackPanel Orientation="Horizontal" Height="40" >
                    <TextBox x:Name="SearchTextBox" TextChanged="SearchTextBox_TextChanged" Margin="5,0,5,0" 
                             Padding="3" FontSize="15" Width="250" Height="30" BorderBrush="Gray"/>
                    <Button x:Name="OpenFileButton" Grid.Column="1" Background="{DynamicResource NoBackground}" 
                            BorderBrush="{DynamicResource BorderLess}" Margin="0,0,5,0" Width="50" Click="OpenFile_Click">
                        <Image Source="/Icons/treble-clef.png" />
                    </Button>

                    <Button x:Name="OpenPlaylistButton" Grid.Column="3" Background="{DynamicResource NoBackground}" 
                            BorderBrush="{DynamicResource BorderLess}" Margin="5,0,0,0" Width="50" >
                        <Image Source="/Icons/open_playlist.png" />
                    </Button>

                    <Button x:Name="SettingsButton"  Grid.Column="3" Background="{DynamicResource NoBackground}"
                            BorderBrush="{DynamicResource BorderLess}" Margin="5,0,0,0" Width="50" 
                            Click="Settings_Click">
                        <Image Source="/Icons/settings.png" />
                    </Button>
                </StackPanel>
                
                <!-- ==== Playlist list ==== -->
                <Border Grid.Row="1" BorderBrush="{DynamicResource PlaylistBorder}" Margin="5">
                    <ListView x:Name="PlaylistListView"
                              MouseDoubleClick="PlaylistListView_MouseDoubleClick"
                              PreviewMouseLeftButtonDown="PlaylistListView_PreviewMouseLeftButtonDown"
                              PreviewMouseMove="PlaylistListView_PreviewMouseMove"
                              BorderThickness="0"
                              AllowDrop="True"
                              Drop="PlaylistListView_Drop">

                        <!-- Apply background highlight based on IsPlaying -->
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Background" Value="{DynamicResource NoBackground}"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource NowPlaying}"/>
                                        <!-- Darkish color -->
                                        <Setter Property="Foreground" Value="{DynamicResource NowForeground}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="50">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <!-- Default icon -->
                                                <Image Source="/Icons/treble-clef.png"
                                               Width="20" Height="20"
                                               Stretch="UniformToFill"
                                               x:Name="DefaultIcon"/>

                                                <!-- Playing icon -->
                                                <Image Source="/Icons/play.png"
                                               Width="20" Height="20"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Visibility="Collapsed"
                                               x:Name="PlayingIcon"/>
                                            </Grid>
                                            

                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                    <Setter TargetName="DefaultIcon" Property="Visibility" Value="Collapsed"/>
                                                    <Setter TargetName="PlayingIcon" Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Title" Width="200">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Title, TargetNullValue='Unknown Title'}" 
                       TextTrimming="CharacterEllipsis"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Artist" Width="150">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Artist, TargetNullValue='Unknown Artist'}" 
                       TextTrimming="CharacterEllipsis"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Duration" Width="90">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Duration, TargetNullValue='--:--'}" 
                       HorizontalAlignment="Center"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>

                </Border>
            </Grid>
            </Grid>

        <!-- ===== Media Controls ===== -->
        <Grid Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="PlayerControlsGrid" >
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--<ProgressBar x:Name="BufferingProgressBar" Height="5" Margin="0,5" IsIndeterminate="True" Visibility="Hidden"/>-->

            <!-- ⏳ Progress Bar -->
            <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <!-- Current time -->
                    <ColumnDefinition Width="*"/>
                    <!-- Slider (expands) -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- Total time -->
                </Grid.ColumnDefinitions>

                <TextBlock x:Name="CurrentTime"
                           Grid.Column="0"
                           Text="00:00:00" 
                           Margin="0,0,10,0"
                           VerticalAlignment="Center"
                           Foreground="{DynamicResource WindowForeground}"/>

                <Slider x:Name="TimeSlider" Background="{DynamicResource SliderBackground}"
                        Grid.Column="1"
                        Minimum="0"
                        Maximum="1"
                        Value="0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Stretch"
                        IsMoveToPointEnabled="True"
                        Cursor="Hand"
                        PreviewMouseLeftButtonDown="TimeSlider_PreviewMouseLeftButtonDown"
                        PreviewMouseLeftButtonUp="TimeSlider_PreviewMouseLeftButtonUp"
                        ValueChanged="TimeSlider_ValueChanged"/>

                <TextBlock x:Name="TotalTime"
                           Grid.Column="2"
                           Text="00:00:00" 
                           Margin="10,0,0,0"
                           VerticalAlignment="Center"
                           Foreground="{DynamicResource WindowForeground}"/>
            </Grid>

            <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" 
                        Background="{DynamicResource NoBackground}">
                <TextBlock x:Name="SpeedTB" Text="Spped" Foreground="{DynamicResource WindowForeground}"/>
                
                <Slider x:Name="SpeedSlider" Width="80" Minimum="0.5" Maximum="2" Value="1" TickPlacement="BottomRight" 
                        TickFrequency="0.25" Background="{DynamicResource SliderBackground}"
                            IsSnapToTickEnabled="True" ValueChanged="SpeedSlider_ValueChanged"/>

                <Button x:Name="FullScreen" Click="FullScreen_Click" ToolTip="Toggle Screen" Background="{DynamicResource ButtonBackground}">
                    <Image x:Name="FullScreenImage" Source="/Icons/full-screen.png" />
                </Button>

                <!--======= Play Pause =========-->
                <Button x:Name="PlayPauseButton" Click="PlayPause_Click" ToolTip="Play" Background="{DynamicResource ButtonBackground}">
                    <Image x:Name="PlayPauseImage" Source="/Icons/play.png" />
                </Button>


                <Button Name="Previous" Click="Previous_Click" ToolTip="Previous" Background="{DynamicResource ButtonBackground}">
                    <Image Source="/Icons/previous.png" />
                </Button>
                <Button Name="Stop" Click="Stop_Click" ToolTip="Stop" Background="{DynamicResource ButtonBackground}">
                    <Image Source="/Icons/stop.png" />
                </Button>
                <Button Name="Next" Click="Next_Click" ToolTip="Next" Background="{DynamicResource ButtonBackground}">
                    <Image Source="/Icons/next.png" />
                </Button>
                <Button Name="Repeat" Click="Repeat_Click" ToolTip="Repeat" Background="{DynamicResource ButtonBackground}">
                    <Image x:Name="RepeatImage" Source="/Icons/repeat.png"/>
                </Button>
                <Button Name="ShuffleButton" Click="Shuffle_Click" ToolTip="Shuffle" Background="{DynamicResource ButtonBackground}">
                    <Image Source="/Icons/shuffle.png" />
                </Button>
                <Button Name="TogglePlaylist" Click="TogglePlaylist_Click" ToolTip="Toggle Playlist" Background="{DynamicResource ButtonBackground}">
                    <Image Source="/Icons/playlist.png" />
                </Button>

                <Grid>
                    <!-- Speaker Button -->
                    <Button x:Name="speakerButton" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{DynamicResource ButtonBackground}"
                        ToolTip="Volume"
                        MouseEnter="speakerButton_MouseEnter"
                        MouseLeave="speakerButton_MouseLeave">
                        <Image x:Name="VolumSpeaker" Source="/Icons/speaker.png" Stretch="Uniform"/>
                    </Button>

                    <!-- Volume Popup -->
                    <Popup x:Name="volumePopup" Placement="Right" StaysOpen="False" AllowsTransparency="True">
                        <Border Background="{DynamicResource WindowBackground}" BorderBrush="{DynamicResource AccentColor}" 
                                BorderThickness="1" CornerRadius="5" Padding="5">
                                                <Slider x:Name="VolumeSlider"
                                    Minimum="0"
                                    Maximum="100"
                                    Width="100"
                                    Value="20"
                                    SmallChange="2"
                                    LargeChange="5"
                                    TickFrequency="1"
                                    ValueChanged="VolumeSlider_ValueChanged"/>
                        </Border>
                    </Popup>
                </Grid>

            </StackPanel>

            
        </Grid>

        <!-- ===== Status Bar ===== -->
        <StatusBar Grid.Row="3" x:Name="Status" Background="{DynamicResource WindowBackground}">
            <StatusBarItem x:Name="NowPlayingText" Content="Now Playing: No Track Loaded"/>
            <Separator/>
            <StatusBarItem x:Name="RepeatModeText" Content="Repeat: Off"/>
            <Separator/>
            <StatusBarItem x:Name="ShuffleModeText" Content="Shuffle: Off" HorizontalAlignment="Right"/>
            <Separator/>
            <StatusBarItem x:Name="TrackCountText" Content="Total Tracks: 0" HorizontalAlignment="Right"/>


        </StatusBar>
        

        <!-- ================== SETTINGS OVERLAY ================== -->
        <Grid x:Name="SettingsOverlay" Grid.RowSpan="3" Visibility="Hidden" Background="#AA000000">
            <Border Width="300" Height="200" Background="{DynamicResource OverlayBackground}"
                CornerRadius="10" BorderBrush="{DynamicResource AccentColor}" BorderThickness="2"
                VerticalAlignment="Center" HorizontalAlignment="Center">
                <StackPanel Margin="15">
                    <TextBlock Text="Settings" FontSize="20" FontWeight="Bold" Foreground="{DynamicResource WindowForeground}" HorizontalAlignment="Center"/>
                    <TextBlock Text="Select a theme:" Margin="0,15,0,5" Foreground="{DynamicResource WindowForeground}"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="Dark Theme" Margin="5" Click="DarkTheme_Click" Width="auto"/>
                        <Button Content="Light Theme" Margin="5" Click="LightTheme_Click" Width="auto"/>
                        <Button Content="Light Grey" Margin="5" Click="LightGreyTheme_Click" Width="auto"/>
                    </StackPanel>
                    <Button Content="Close" Margin="0,20,0,0" Click="CloseSettings_Click"/>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</Window>
